<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialization

grav = 0.2; //Gravity
hsp = 0; //Our own horizontal and vertical speeds
vsp = 0;
jumpspeed = 7;
movespeed = 4;
move = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

//Controls

move_right = keyboard_check(vk_right) || keyboard_check(ord('D'));
move_left = -(keyboard_check(vk_left) || keyboard_check(ord('A')));
jump = (keyboard_check_pressed(vk_space)|| keyboard_check(ord('W')));

//Movement logic

move = move_left + move_right;
hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav;

//Jump only when on floor

if (place_meeting(x,y+1,obj_grass) || place_meeting(x,y+1,obj_stone))
{
    vsp = jump * -jumpspeed
}
 
//Horizontal Collision Grass

if (place_meeting(x + hsp, y, obj_grass))
{
    while(!place_meeting (x + sign(hsp), y, obj_grass))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
 
//Vertical Collision Grass
if (place_meeting(x, y + vsp, obj_grass))
{ 
    if sign(vsp)&gt;0 {
        while(!place_meeting(x,y+1,obj_grass))
        {
            y += 1;
        }
        vsp = 0;
    } else {
    vsp = -movespeed/2;
    }
}

//Horizontal Collision Stone

if (place_meeting(x + hsp, y, obj_stone))
{
    while(!place_meeting (x + sign(hsp), y, obj_stone))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

//Vertical Collision Stone

if (place_meeting(x, y + vsp, obj_stone))
{
    while(!place_meeting(x,y+sign(vsp),obj_stone))
    {
        y += sign(vsp);
    }
    vsp = 0;
}


//Player position update

x += hsp;
y += vsp;

// Out of Screen

if (x &lt; 0 || x &gt; room_width) {
    x = room_width/2;
    y = room_height - 180;
    vsp = 0;
}

/* OLD COLLISION BACKUPS

if (place_meeting(x,y+1,obj_grass))
{
    vsp = jump * -jumpspeed
}
 
//Horizontal Collision
if (place_meeting(x + hsp, y, obj_grass))
{
    while(!place_meeting (x + sign(hsp), y, obj_grass))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;
 
//Vertical Collision
if (place_meeting(x, y + vsp, obj_grass))
{ 
    if sign(vsp)&gt;0 {
        while(!place_meeting(x,y+1,obj_grass))
        {
            y += 1;
        }
        vsp = 0;
    } else {
    vsp = -movespeed/2;
    }
}
y += vsp;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
